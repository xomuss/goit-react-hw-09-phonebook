{"version":3,"sources":["redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","views/ContactsPage.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form/Form.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactList.module.css"],"names":["contact","dispatch","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFilter","state","contacts","filter","allContacts","items","getLoading","loading","getVisibleContacts","createSelector","filterNormalize","toLowerCase","name","includes","Form","useDispatch","useState","setName","number","setNumber","useSelector","phonebookSelectors","nameInputId","shortid","generate","telInputId","handleChange","useCallback","e","target","value","handleSubmit","preventDefault","find","el","operations","reset","alert","className","styles","form","onSubmit","htmlFor","input","onChange","type","pattern","title","required","button","Filter","label","filterContscts","ContactsList","contactsData","contsct__list","map","contact__list_el","contact__list_text","onClick","phonebookOperations","onDeleteContact","ContactsPage","isLoadingContacts","useEffect","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","setCharacters","_alphabet_","length","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","RegExp","replace","test","_slicedToArray","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/3.5a18128c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst allContacts = state => state.contacts.items;\r\n\r\n// const getVisibleContacts = state => {\r\n//   const contacts = allContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const filterNormalize = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filterNormalize),\r\n//   );\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [allContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterNormalize = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filterNormalize),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  allContacts,\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport { phonebookSelectors } from '../../redux/phonebook';\r\nimport styles from './Form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(phonebookSelectors.allContacts);\r\n\r\n  const nameInputId = shortid.generate();\r\n  const telInputId = shortid.generate();\r\n\r\n  const handleChange = useCallback(e => {\r\n    const { value, name } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const foundName = contacts.find(el => el.name.includes(name));\r\n      if (!foundName) {\r\n        dispatch(operations.addContact({ name, number }));\r\n        reset();\r\n        return;\r\n      }\r\n      alert('this name already exist');\r\n\r\n      reset();\r\n    },\r\n    [name, number, contacts, dispatch],\r\n  );\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          id={nameInputId}\r\n          onChange={handleChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label htmlFor={telInputId}>\r\n        Telephone\r\n        <input\r\n          className={styles.input}\r\n          id={telInputId}\r\n          onChange={handleChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phonebookSelectors, filterContscts } from '../../redux/phonebook';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(phonebookSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        onChange={e => dispatch(filterContscts(e.target.value))}\r\n        value={value}\r\n        name=\"filter\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\r\n\r\nexport default function ContactsList() {\r\n  const contactsData = useSelector(phonebookSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(phonebookOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={styles.contsct__list}>\r\n      {contactsData.map(({ name, number, id }) => (\r\n        <li key={id} className={styles.contact__list_el}>\r\n          <p className={styles.contact__list_text}>\r\n            {name}: {number}\r\n          </p>\r\n          <button onClick={() => onDeleteContact(id)}>delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Form from '../components/Form';\r\nimport Filter from '../components/Filter';\r\nimport ContactsList from '../components/ContactsList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { phonebookOperations, phonebookSelectors } from '../redux/phonebook';\r\n\r\nexport default function ContactsPage() {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(phonebookSelectors.getLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(phonebookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phone Book</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      {isLoadingContacts && <h1>download...</h1>}\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3eKsB\",\"input\":\"Form_input__-wUOt\",\"button\":\"Form_button__g_Su2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__9Emwx\",\"label\":\"Filter_label__2oUcl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contsct__list\":\"ContactList_contsct__list__1xA8N\",\"contact__list_el\":\"ContactList_contact__list_el__1wnG7\",\"contact__list_text\":\"ContactList_contact__list_text__2BegD\"};"],"sourceRoot":""}